// A compile-time Turing-complete template metaprogram
template <int N> struct Factorial {
    static const int value = N * Factorial<N-1>::value;
};

template <> struct Factorial<0> {
    static const int value = 1;
};

// Compile-time prime number checker
template <int p, int i> struct IsPrime {
    static const bool value = (p % i) && IsPrime<p, i-1>::value;
};

template <int p> struct IsPrime<p, 1> {
    static const bool value = true;
};
